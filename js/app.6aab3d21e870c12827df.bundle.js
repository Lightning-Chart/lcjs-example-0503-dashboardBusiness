(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,s)=>{const n=s(377),a=s(613),{lightningChart:r,SolidFill:o,SolidLine:i,UILayoutBuilders:l,UIElementBuilders:d,AutoCursorModes:c,AxisTickStrategies:S,emptyLine:m,emptyFill:x,AxisScrollStrategies:p,Themes:u}=n,{createProgressiveTraceGenerator:h}=a,g=new Date(2018,0,1),y=g.getTime(),T=["Dev","Maintenance","Support","Sales","Marketing"],w=864e5,k=Promise.all(T.map((e,t)=>h().setNumberOfPoints(365).generate().toPromise().then(e=>e.map(e=>({x:y+e.x*w,y:t>0?100*Math.abs(e.y)+100:50*Math.abs(e.y)+1800}))).then(e=>e.map(e=>({x:e.x-y,y:e.y}))))),f=r({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).Dashboard({theme:u[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0,numberOfRows:3,numberOfColumns:2}),I=f.getTheme(),v=new i({thickness:20/window.devicePixelRatio,fillStyle:new o({color:I.examples.unfocusedDataColor})}),D=new o({color:I.examples.mainDataColor}),E=k.then(e=>e.map(e=>e.reduce((e,t)=>e+t.y,0))),b=f.createChartXY({columnIndex:0,rowIndex:0,columnSpan:1,rowSpan:2,legend:{visible:!1}}).setCursorMode(void 0).setTitle("Total expenses for 2018 per department").setUserInteractions(void 0),U=b.getDefaultAxisX();U.setTickStrategy(S.Empty).setInterval({start:0,end:100}).setScrollStrategy(void 0),b.getDefaultAxisY().setTitle("Expenses").setUnits("$").setStrokeStyle(e=>e.setThickness(0));const C=b.addSegmentSeries().setHighlightOnHover(!1),P=T.length+1,A=T.map((e,t)=>U.addCustomTick().setTextFormatter(t=>e).setValue(100/P*(t+1)).setGridStrokeStyle(m)),F=f.createChartXY({columnIndex:0,rowIndex:2,columnSpan:2,rowSpan:1,legend:{visible:!1}});f.setRowHeight(2,2);const R=F.addLineSeries().setName("Total Expenses").setStrokeStyle(e=>e.setFillStyle(D));F.getDefaultAxisX().setTickStrategy(S.DateTime,e=>e.setDateOrigin(g)),k.then(e=>{const t=e.reduce((e,t)=>t.reduce((e,t)=>e>t.y?e:t.y,e),0);F.getDefaultAxisY().setTitle("Expenses").setUnits("$").setScrollStrategy(p.fitting).setInterval({start:0,end:t,stopAxisAfter:!1})}),Promise.all([E,k]).then(([e,t])=>{const s=A.map((t,s)=>{const n=t.getValue();return C.add({startX:n,startY:0,endX:n,endY:e[s]})}),n=e=>{F.setTitle(`${T[e]} expenses per day`),R.clear(),R.appendJSON(t[e]),s.forEach(e=>e.setStrokeStyle(v)),A.forEach(e=>e.setMarker(e=>e.setTextFont(e=>e.setWeight("normal")))),s[e].setStrokeStyle(e=>e.setFillStyle(D)),A[e].setMarker(e=>e.setTextFont(e=>e.setWeight("bold")))};s.forEach((e,t)=>{e.addEventListener("pointerenter",()=>n(t))}),n(0)});const O=f.createUIPanel({columnIndex:1,rowIndex:0,columnSpan:1,rowSpan:1}).addUIElement(l.Column).setPosition({x:50,y:50}).setPadding({right:40}).setBackground(e=>e.setFillStyle(x).setStrokeStyle(m));E.then(e=>{const t=O.addElement(l.Row);t.addGap(),t.addElement(d.TextBox.addStyler(t=>t.setTextFont(e=>e.setSize(75/window.devicePixelRatio)).setText("$"+e.reduce((e,t)=>e+t,0).toFixed()))),t.addGap(),O.addElement(d.TextBox.addStyler(e=>e.setTextFont(e=>e.setSize(25/window.devicePixelRatio)).setText("Total company expenses")))});const L=f.createChartXY({columnIndex:1,rowIndex:1,columnSpan:1,rowSpan:1,legend:{visible:!1}}).setTitle("Total expenses per day");L.getDefaultAxisX().setTickStrategy(S.DateTime,e=>e.setDateOrigin(g));const M=L.addSplineSeries().setName("Total Expenses").setStrokeStyle(e=>e.setThickness(2));k.then(e=>{const t=new Array(365);for(let s=0;s<365;s++)t[s]={x:s*w,y:T.reduce((t,n,a)=>t+e[a][s].y,0)};M.setPointFillStyle(x).appendJSON(t)}),L.getDefaultAxisY().setTitle("Expenses").setUnits("$")},216:()=>{}},e=>{e.O(0,[502],()=>e(e.s=44)),e.O()}]);